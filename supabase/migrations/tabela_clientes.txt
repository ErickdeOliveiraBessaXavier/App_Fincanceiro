create table public.clientes (
  id uuid not null default gen_random_uuid (),
  nome text not null,
  cpf_cnpj text not null,
  telefone text null,
  email text null,
  endereco_completo text null,
  cep text null,
  cidade text null,
  estado text null,
  status text not null default 'ativo'::text,
  observacoes text null,
  created_by uuid not null,
  created_at timestamp with time zone not null default now(),
  updated_at timestamp with time zone not null default now(),
  constraint clientes_pkey primary key (id),
  constraint clientes_cpf_cnpj_key unique (cpf_cnpj),
  constraint clientes_status_check check (
    (
      status = any (
        array[
          'ativo'::text,
          'inadimplente'::text,
          'em_acordo'::text,
          'quitado'::text
        ]
      )
    )
  )
) TABLESPACE pg_default;

create index IF not exists idx_clientes_cpf_cnpj on public.clientes using btree (cpf_cnpj) TABLESPACE pg_default;

create index IF not exists idx_clientes_status on public.clientes using btree (status) TABLESPACE pg_default;

create index IF not exists idx_clientes_nome on public.clientes using btree (nome) TABLESPACE pg_default;

create trigger update_clientes_updated_at BEFORE
update on clientes for EACH row
execute FUNCTION update_updated_at_column ();